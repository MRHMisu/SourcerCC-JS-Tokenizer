###################################################################################
################# Configuration of SourcerCC-JS-Tokenizer #########################
######## The configuration options are same as SourcerCC actual tokenizer #########
###################################################################################
# Path to the input source directory
sourceDirectoryPath=/home/mrhmisu/UCL-MS/Test-Data/index/react-master/scripts
# File Path where the bookkeeping file (mapping ids to code blocks) will be created
headerFilePath=/home/mrhmisu/UCL-MS/Test-Data/js-tokenizer/header.file
# File Path where the parsed output code block (tokens) file will be created
tokenFilePath=/home/mrhmisu/UCL-MS/Test-Data/js-tokenizer/token.file
# Granularity at which input is to be parsed (this should be either 'function'  or 'file')
granularity=function
# Language of the source project(s), it is fixed to 'javascript'
language=javascript
# Minimum number of tokens to be considered in a block
minimumTokens=0
# Maximum number of tokens to be considered in a block
maximumTokens=0
# Minimum number of lines to be considered in a block
minimumLines=6
# Maximum number of lines to be considered in a block
maximumLines=0
# Number of threads to launch for parsing
numberOfThreads=4
################################## Important ##########################################
# Note that setting the minimumTokens/maximumTokens to zero
# means no minimum limit for the size of the code block ######
#whereas setting maximumTokens/maximumLines to zero means that there is no upper limit,
# i.e., code blocks of any size will be considered.
#######################################################################################